{"version":3,"sources":["services/ColumnFormatter.jsx","device/Devices/Devices.jsx","services/FakeDataService.jsx","components/LabeledButton/LabeledButton.jsx","device/DeviceDetails/DeviceDetails.jsx"],"names":["ColumnFormatter","yesNoTemplate","itemData","classes","props","field","className","dateShortTemplate","date","format","dateFromNowTemplate","future","Date","getTime","fromNow","Component","Devices","columnModel","header","width","formatter","useOverlay","query","queryString","parse","location","search","buildMenu","selected","actions","length","label","items","push","command","enabledCount","disabledCount","forEach","item","enabled","setEnabledState","state","deviceDataService","update","then","response","reload","onSelectionChanged","setState","FakeDataService","bind","style","margin","MasterDetail","breakpoints","breakpointColumns","this","dataService","menuProvider","selectionChangedCallback","nameField","line1Field","line2Field","line3Field","detailWidth","DeviceDetails","withRouter","config","offest","limit","sort","filter","list","newArray","fakeData","user","includes","Promise","resolve","get","id","parseInt","i","reject","index","indexOf","create","delete","Array","isArray","clone","value","splice","dataChanged","dataChangedCallback","setReloadCallback","callback","reloadCallback","role","manufacturer","type","model","mac","name","status","credentials","active","added","expires","React","defaultProps","LabeledButton","buttonClass","icon","iconName","onClick","marginLeft","PureComponent","alert","panelStyle","onlineStyle","color","fontSize","fontStyle","offlineStyle","buttonStyle","marginRight","marginBottom","buildValues","device","userUrl","userId","roleUrl","roleId","values","href","cred","lastSeen","onClose","escFunction","event","keyCode","document","addEventListener","removeEventListener","itemId","reason","WaitSpinner","showClose","cursor","KeyValuePanel","labels","marginTop"],"mappings":"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","file":"static/js/9.bb321852.chunk.js","sourcesContent":["import Moment from 'react-moment';\nimport React, {Component} from 'react';\nimport {PropTypes} from 'prop-types';\nimport './ColumnFormatter.css';\n\nclass ColumnFormatter extends Component {\n  yesNoTemplate = itemData => {\n    const yes = itemData[this.props.field];\n    let classes = yes ? 'green' : 'red';\n    classes += ' center';\n    return <div className={classes}>{itemData[this.props.field] ? 'Yes' : 'No'}</div>;\n  };\n\n  dateShortTemplate = itemData => {\n    if (itemData[this.props.field] === 0) {\n      return 'Never';\n    }\n    return <Moment date={itemData[this.props.field]} format=\"D MMM YYYY\" />;\n  };\n\n  dateFromNowTemplate = itemData => {\n    if (itemData[this.props.field] === 0) {\n      return 'Never';\n    }\n    const future = itemData[this.props.field] > new Date().getTime();\n    return (\n      <Moment className={future ? 'green' : 'red'} fromNow>\n        {itemData[this.props.field]}\n      </Moment>\n    );\n  };\n}\n\nexport default ColumnFormatter;\n\nColumnFormatter.propTypes = {\n  /** The name of the column property to format */\n  field: PropTypes.string,\n};\n","import React, {Component} from 'react';\nimport MasterDetail from '../../components/MasterDetail/MasterDetail';\nimport DeviceDetails from '../DeviceDetails/DeviceDetails';\nimport ColumnFormatter from '../../services/ColumnFormatter';\nimport FakeDataService from '../../services/FakeDataService';\nimport queryString from 'query-string';\nimport {withRouter} from 'react-router-dom';\n\nclass Devices extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: [],\n    };\n    this.deviceDataService = new FakeDataService();\n    this.onSelectionChanged = this.onSelectionChanged.bind(this);\n    this.setEnabledState = this.setEnabledState.bind(this);\n  }\n\n  columnModel = [\n    {field: 'user', header: 'User', width: 140},\n    {field: 'mac', header: 'MAC Address', width: 140},\n    {field: 'name', header: 'Name', width: 200},\n    {field: 'role', header: 'Role', width: 80},\n    {field: 'manufacturer', header: 'Manufacturer', width: 120},\n    {field: 'type', header: 'Type', width: 130},\n    {field: 'model', header: 'Model', width: 80},\n    {field: 'status', header: 'Status', width: 70},\n    {field: 'credentials', header: 'Credentials', width: 110},\n    {field: 'enabled', header: 'Enabled', width: 80, formatter: new ColumnFormatter({field: 'enabled'}).yesNoTemplate},\n    {field: 'active', header: 'Active', width: 80, formatter: new ColumnFormatter({field: 'active'}).yesNoTemplate},\n    {field: 'added', header: 'Added', width: 100, formatter: new ColumnFormatter({field: 'added'}).dateShortTemplate},\n    {\n      field: 'expires',\n      header: 'Cert Expires',\n      width: 100,\n      formatter: new ColumnFormatter({field: 'expires'}).dateFromNowTemplate,\n    },\n  ];\n\n  render() {\n    return (\n      <div style={{margin: '10px'}}>\n        <MasterDetail\n          label=\"Devices\"\n          breakpoints={[600, 1000, 1500]}\n          breakpointColumns={[3, 7, 12]}\n          columnModel={this.columnModel}\n          dataService={this.deviceDataService}\n          menuProvider={this}\n          selectionChangedCallback={this.onSelectionChanged}\n          nameField=\"user\"\n          line1Field=\"user\"\n          line2Field=\"mac\"\n          line3Field=\"name\"\n          useOverlay={this.useOverlay()}\n          detailWidth={450}\n        >\n          <DeviceDetails></DeviceDetails>\n        </MasterDetail>\n      </div>\n    );\n  }\n\n  useOverlay = () => {\n    const query = queryString.parse(this.props.location.search);\n    if (query.useOverlay) {\n      return query.useOverlay === 'false' ? false : true;\n    }\n    return true;\n  };\n\n  buildMenu = selected => {\n    let actions;\n    if (selected.length > 0) {\n      actions = {\n        label: 'Actions',\n        items: [],\n      };\n      if (selected.length === 1)\n        actions.items.push({\n          label: 'Edit',\n          command: () => {},\n        });\n\n      let enabledCount = 0;\n      let disabledCount = 0;\n      selected.forEach(item => {\n        item.enabled ? enabledCount++ : disabledCount++;\n      });\n      if (enabledCount > 0)\n        actions.items.push({\n          label: 'Disable',\n          command: () => {\n            this.setEnabledState(false);\n          },\n        });\n      if (disabledCount > 0)\n        actions.items.push({\n          label: 'Enable',\n          command: () => {\n            this.setEnabledState(true);\n          },\n        });\n    }\n    return actions;\n  };\n\n  setEnabledState = state => {\n    this.state.selected.forEach(item => {\n      item.enabled = state;\n      this.deviceDataService.update(item).then(response => {\n        this.deviceDataService.reload();\n      });\n    });\n  };\n\n  onSelectionChanged = selected => {\n    this.setState({selected: selected});\n  };\n}\n\nexport default withRouter(Devices);\n","import React from 'react';\nimport {PropTypes} from 'prop-types';\n\nclass FakeDataService extends React.Component {\n  config = {offest: 0, limit: 20, sort: null, filter: null};\n\n  list = config => {\n    if (config) {\n      this.config = {...this.config, ...config}; // Merge\n    }\n    if (!this.config.filter || this.config.filter.length === 0) {\n      return Promise.resolve(this.fakeData);\n    } else {\n      const newArray = this.fakeData.filter(item => {\n        return item.user.includes(this.config.filter);\n      });\n      return Promise.resolve(newArray);\n    }\n  };\n\n  get = id => {\n    id = typeof id === 'string' ? parseInt(id) : id;\n    for (let i = 0; i < this.fakeData.length; i++) {\n      if (this.fakeData[i].id === id) {\n        return Promise.resolve(this.fakeData[i]);\n      }\n    }\n    return Promise.reject('No such Id');\n  };\n\n  update = item => {\n    const index = this.fakeData.indexOf(item);\n    if (index === -1) {\n      return Promise.reject('No such item with id: ' + item.id);\n    }\n    this.fakeData[index] = item;\n    return Promise.resolve(item);\n  };\n\n  create = item => {\n    this.fakeData.push(item);\n    return Promise.resolve(item);\n  };\n\n  delete = items => {\n    if (Array.isArray(items)) {\n      var clone = [...this.fakeData];\n      items.forEach(value => {\n        const index = clone.indexOf(value);\n        if (index === -1) {\n          return Promise.reject('No such item with id: ' + value.id);\n        } else {\n          clone.splice(index, 1);\n        }\n      });\n      this.fakeData = clone;\n    } else {\n      const index = this.fakeData.indexOf(items);\n      if (index === -1) {\n        return Promise.reject('No such item with id: ' + items.id);\n      } else {\n        this.fakeData.splice(index, 1);\n      }\n    }\n    return Promise.resolve(this.fakeData);\n  };\n\n  dataChanged = () => {\n    this.props.dataChangedCallback();\n  };\n\n  setReloadCallback = callback => {\n    this.reloadCallback = callback;\n  };\n\n  reload = () => {\n    this.reloadCallback();\n  };\n\n  fakeData = [\n    {\n      id: 0,\n      user: 'Fred Flintstone',\n      role: 'student',\n      manufacturer: 'Samsung',\n      type: 'Galaxy',\n      model: 'S8',\n      mac: '11:22:33:44:55:66',\n      name: 'Personal cell phone',\n      status: 'online',\n      credentials: 'certificate',\n      enabled: true,\n      active: true,\n      added: 1564076127000,\n      expires: 1588523327000,\n    },\n    {\n      id: 1,\n      user: 'Fred Flintstone',\n      role: 'student',\n      manufacturer: 'Apple',\n      type: 'iPhone',\n      model: 'X',\n      mac: '22:33:44:55:66:77',\n      name: 'Work cell phone',\n      status: 'online',\n      credentials: 'certificate',\n      enabled: true,\n      active: true,\n      added: 1563076127000,\n      expires: 1566076127000,\n    },\n    {\n      id: 2,\n      user: 'Fred Flintstone',\n      role: 'student',\n      manufacturer: 'Roku',\n      type: 'Streaming Stick',\n      model: '3800',\n      mac: '33:44:55:66:77:88',\n      name: 'Livingroom Roku',\n      status: 'offline',\n      credentials: 'MPSK',\n      enabled: true,\n      active: true,\n      added: 1553076127000,\n      expires: 1656076127000,\n    },\n    {\n      id: 3,\n      user: 'Barney Rubble',\n      role: 'faculty',\n      manufacturer: 'Roku',\n      type: 'Streaming Stick',\n      model: '3800',\n      mac: '44:55:66:77:88:99',\n      name: 'Bedroom Roku',\n      status: 'online',\n      credentials: 'MPSK',\n      enabled: true,\n      active: true,\n      added: 1053076127000,\n      expires: 0,\n    },\n    {\n      id: 4,\n      user: 'Barney Rubble',\n      role: 'faculty',\n      manufacturer: 'Apple',\n      type: 'iPhone',\n      model: '5',\n      mac: '55:66:77:88:99:aa',\n      name: 'Personal cell phone',\n      status: 'online',\n      credentials: 'certificate',\n      enabled: true,\n      active: true,\n      added: 1500076127000,\n      expires: 1550076127000,\n    },\n  ];\n}\n\nexport default FakeDataService;\n\nFakeDataService.propTypes = {\n  /** Data changed callback */\n  dataChangedCallback: PropTypes.func,\n};\n\nFakeDataService.defaultProps = {\n  dataChangedCallback: () => {},\n};\n","import {PropTypes} from 'prop-types';\nimport React, {PureComponent} from 'react';\nimport {Button} from 'primereact/button';\n\nclass LabeledButton extends PureComponent {\n  render() {\n    return (\n      <>\n        <div className=\"p-grid p-align-center p-nogutter\">\n          <Button\n            className={'p-col-fixed' + this.props.buttonClass ? this.props.buttonClass : ''}\n            icon={'pi pi-' + this.props.iconName}\n            onClick={this.props.onClick}\n          />\n          <div className=\"p-col-fixed\" style={{marginLeft: '5px'}}>\n            {this.props.label}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default LabeledButton;\n\nLabeledButton.defaultProps = {\n  iconName: 'question',\n  label: 'No Label',\n  onClick: () => {\n    alert('Please add an onClick handle');\n  },\n};\n\nLabeledButton.propTypes = {\n  /** The name of the icon to display in the button. Assumes primeicons\n   *  Icon library to chose from: https://www.primefaces.org/showcase/ui/misc/primeicons.xhtml\n   *  You only specify the name like \"question\" and \"pi pi-question\" will be used.\n   */\n  iconName: PropTypes.string.isRequired,\n  /** The label to be used for the button. The label will be on the right of the icon */\n  label: PropTypes.string.isRequired,\n  /** The callback function to be called when the button is clicked */\n  onClick: PropTypes.func.isRequired,\n  /**  Add the button class for background color. Optional, defaults to primary color.\n   *  Other options are: .p-button-secondary .p-button-success .p-button-info .p-button-warning .p-button-danger\n   */\n  buttonClass: PropTypes.string,\n};\n","import {PropTypes} from 'prop-types';\nimport React, {Component} from 'react';\nimport Moment from 'react-moment';\nimport LabeledButton from '../../components/LabeledButton/LabeledButton';\nimport KeyValuePanel from '../../components/KeyValuePanel/KeyValuePanel';\nimport FakeDataService from './../../services/FakeDataService';\nimport WaitSpinner from './../../components/WaitSpinner/WaitSpinner';\n\nclass DeviceDetails extends Component {\n  panelStyle = {\n    marginLeft: '20px',\n  };\n\n  onlineStyle = {\n    color: 'green',\n    fontSize: '18px',\n    fontStyle: 'bold',\n  };\n\n  offlineStyle = {\n    color: 'red',\n    fontSize: '18px',\n    fontStyle: 'bold',\n  };\n\n  buttonStyle = {\n    marginRight: '20px',\n    marginBottom: '10px',\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      itemData: this.props.itemData,\n    };\n    if (!this.props.itemData) {\n      this.dataService = new FakeDataService();\n    }\n    this.onClose = this.onClose.bind(this);\n    this.escFunction = this.escFunction.bind(this);\n  }\n\n  buildValues = device => {\n    var userUrl = '/user/' + device.userId;\n    var roleUrl = '/role/' + device.roleId;\n    var values = [];\n    values.push(device.enabled ? 'Yes' : 'No');\n    values.push(\n      <>\n        <a href={userUrl}>{device.user}</a> (<a href={roleUrl}>{device.role}</a>)\n      </>\n    );\n    values.push(device.name);\n    var cred = device.credentials;\n    cred += cred === 'certificate' ? ' (expires in 234 days)' : '';\n    values.push(cred);\n    values.push(<Moment date={device.added} />);\n    values.push(<Moment date={device.lastSeen} />);\n    return values;\n  };\n\n  onClose = () => {\n    this.props.onClose();\n  };\n\n  escFunction(event) {\n    if (event.keyCode === 27) {\n      this.onClose();\n    }\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.escFunction, false);\n  }\n\n  render() {\n    const device = this.props.itemId ? this.state.itemData : this.props.itemData;\n    if (!device && !this.props.itemId) {\n      return null;\n    }\n    if (!device && this.props.itemId) {\n      this.dataService.get(this.props.itemId).then(\n        response => {\n          this.setState({itemData: response});\n        },\n        reason => {\n          return {reason};\n        }\n      );\n      return <WaitSpinner></WaitSpinner>;\n    }\n    return (\n      <div style={this.panelStyle}>\n        {/* Header */}\n        <div className=\"p-grid p-align-center p-nogutter\" style={{marginBottom: '10px'}}>\n          <div className=\"p-col-fixed\" style={{fontSize: '24px', marginRight: '40px'}}>\n            Device Details\n          </div>\n          <div className=\"p-col-fixed\" style={device.status === 'online' ? this.onlineStyle : this.offlineStyle}>\n            {device.status === 'online' ? 'Online' : 'Offline'}\n          </div>\n          <div className=\"p-col\" style={{width: '100%'}} />\n          {this.props.showClose && (\n            <i\n              className=\"p-col-fixed pi pi-times\"\n              onClick={this.onClose}\n              style={{fontSize: '28px', color: 'lightgrey', marginLeft: '40px', cursor: 'pointer'}}\n            ></i>\n          )}\n        </div>\n\n        {/* Properties */}\n        <div style={{fontSize: '18px'}}>\n          {device.manufacturer} {device.type} {device.model} ({device.mac})\n        </div>\n        <div style={{margin: '20px'}}>\n          <KeyValuePanel\n            labels={['Enabled', 'User', 'Name', 'Credentials', 'Added', 'Last Seen']}\n            values={this.buildValues(device)}\n          ></KeyValuePanel>\n        </div>\n        {/* Buttons */}\n        <div className=\"p-grid p-align-center p-nogutter\" style={{marginBottom: '10px'}}>\n          <div className=\"p-col-fixed\" style={this.buttonStyle}>\n            <LabeledButton\n              iconName=\"power-off\"\n              label=\"Disable\"\n              //buttonClass=\"p-button-secondary\"\n              onClick={() => {\n                alert('Clicked Disable');\n              }}\n            />\n          </div>\n          <div className=\"p-col-fixed\" style={this.buttonStyle}>\n            <LabeledButton\n              iconName=\"trash\"\n              label=\"Delete\"\n              //buttonClass=\"p-button-secondary\"\n              onClick={() => {\n                alert('Clicked Delete');\n              }}\n            />\n          </div>\n          <div className=\"p-col-fixed\" style={this.buttonStyle}>\n            <LabeledButton\n              iconName=\"replay\"\n              label=\"Revoke Certificate\"\n              //buttonClass=\"p-button-secondary\"\n              onClick={() => {\n                alert('Clicked Revoke');\n              }}\n            />\n          </div>\n        </div>\n\n        <div style={{fontSize: '18px', marginTop: '20px'}}>Recent Activity</div>\n        <div style={{margin: '20px'}}>\n          <KeyValuePanel\n            labels={['An Hour ago', 'A day ago', '3 days ago']}\n            values={[\n              'Something interesting happened here',\n              'Not quite as interesting, but still interesting',\n              'OMG, this is really bad. Something needs to be done',\n            ]}\n          ></KeyValuePanel>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default DeviceDetails;\n\nDeviceDetails.propTypes = {\n  /** The data object for this device */\n  itemData: PropTypes.object,\n  /** Id of item to be fetched. Optional way to pass in data */\n  itemId: PropTypes.string,\n  /** Function to call back when the close button is clicked */\n  onClose: PropTypes.func,\n  /** Should the close button be shown in the upper right corner */\n  showClose: PropTypes.bool,\n};\n\nDeviceDetails.defaultProps = {\n  onClose: () => {},\n  showClose: true,\n};\n"],"sourceRoot":""}